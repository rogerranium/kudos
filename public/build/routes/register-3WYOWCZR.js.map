{
  "version": 3,
  "sources": ["../../../app/routes/register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/register.tsx\");\n  import.meta.hot.lastModified = \"1692040631058.3433\";\n}\n// REMIX HMR END\n\nimport { Layout } from \"~/components/layout\";\nimport { FormField } from \"~/components/form.field\";\nimport { useState, useEffect } from \"react\";\nexport default function Register() {\n  _s();\n  const EMAIL_REGEX = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,3})$/i;\n  const PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\n  const USER_REGEX = /^[A-z][A-z0-9]{1,30}$/;\n  const [validEmail, setValidEmail] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [validLastName, setValidLastName] = useState(false);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  });\n  useEffect(() => {\n    setValidEmail(EMAIL_REGEX.test(formData.email));\n  }, [formData.email]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(formData.password));\n  }, [formData.password]);\n  useEffect(() => {\n    setValidFirstName(USER_REGEX.test(formData.firstName));\n  }, [formData.firstName]);\n  useEffect(() => {\n    setValidLastName(USER_REGEX.test(formData.lastName));\n  }, [formData.lastName]);\n  const handleInputChange = (event, field) => {\n    setFormData(form => ({\n      ...form,\n      [field]: event.target.value\n    }));\n  };\n  return <Layout>\n            <div className=\"h-full flex justify-center items-center flex-col gap-y-4\">\n\n                <h2 className=\"text-5xl font-extrabold text-yellow-300 text-center\">BIENVENUE DANS LE BLOG DE MOMO</h2>\n\n                <p className=\"font-semibold text-slate-300 text-center\">INSCRIPTION</p>\n\n                {JSON.stringify(formData)}<br></br>\n                email valid : {JSON.stringify(validEmail)}<br></br>\n                mot de passe valid : {JSON.stringify(validPassword)}<br></br>\n                nom valid : {JSON.stringify(validFirstName)}<br></br>\n                pr\u00E9nom valid : {JSON.stringify(validLastName)}<br></br>\n\n\n                <form method=\"POST\" className=\"rounded-2xl bg-gray-200 p-6 w-96\">\n                    <FormField type=\"text\" htmlFor=\"email\" label=\"Email\" value={formData.email} onChange={e => handleInputChange(e, 'email')} />\n                    <p className=\"text-red-600 text-sm mb-4 pl-2\">{validEmail ? \"\" : <span>Email incorrect</span>}\n                    </p>\n\n                    <FormField type=\"password\" htmlFor=\"password\" label=\"Mot de passe\" value={formData.password} onChange={e => handleInputChange(e, 'password')} />\n                    <p className=\"text-red-600 text-sm mb-4 pl-2\">{validPassword ? \"\" : <span>Mot de passe doit contenir 8 caract\u00E9res<br></br>avec une majuscule , un caract\u00E8re sp\u00E9cial !@#$% et un nombre</span>}\n                    </p>\n\n                    <FormField type=\"text\" htmlFor=\"firstName\" label='Nom' value={formData.firstName} onChange={e => handleInputChange(e, 'firstName')} />\n                    <p className=\"text-red-600 text-sm mb-4 pl-2\">{validFirstName ? \"\" : <span>Le nom doit contenir 2 \u00E0 30 caract\u00E8res</span>}\n                    </p>\n\n                    <FormField type=\"text\" htmlFor=\"lastName\" label='Pr\u00E9nom' value={formData.lastName} onChange={e => handleInputChange(e, 'lastName')} />\n                    <p className=\"text-red-600 text-sm mb-4 pl-2\">{validLastName ? \"\" : <span>Le pr\u00E9nom doit contenir 2 \u00E0 30 caract\u00E8res</span>}\n                    </p>\n\n                    <div className=\"w-full text-center\">\n                        <button type=\"submit\" name=\"_action\" value=\"register\" className=\"rounded-xl mt-2 bg-yellow-300 px-5 py-2 text-blue-600 \n                        font-semibold transition duration-300 ease-in-out hover:bg-yellow-400 hover:translate-y-1\">\n                            S'inscrire\n                        </button>\n                    </div>\n                </form>\n            </div>\n\n        </Layout>;\n}\n_s(Register, \"dyduP8XbZW3w6M+OX/SgN/bk7ww=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
